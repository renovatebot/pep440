name: build

on:
  pull_request:
  push:
    branches-ignore:
      - gh-readonly-queue/**

  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry-Run'
        default: 'true'
        required: false
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' && !startsWith(github.ref_name, 'maint/') && github.event_name != 'push' }}

env:
  DRY_RUN: ${{ github.ref_name != github.event.repository.default_branch && !startsWith(github.ref_name, 'maint/') }}

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: ⚙️ Setup
        uses: containerbase/internal-tools/setup@44962a8401fc565ef0b0b2cb283177f659befc47 # v3.13.14
        with:
          save-cache: true

  test:
    needs:
      - setup
    name: ${{ matrix.node-version == 22 && format('test ({0})', matrix.os) || format('test ({0}, node-{1})', matrix.os, matrix.node-version) }}
    runs-on: ${{ matrix.os }}

    # tests shouldn't need more time
    timeout-minutes: 30

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version:
          - 20
          - 22
          - 24

    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == 22 }}

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 10 # required for coverage
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: ⚙️ Setup
        uses: containerbase/internal-tools/setup@44962a8401fc565ef0b0b2cb283177f659befc47 # v3.13.14
        with:
          checkout: false
          node-version: ${{ matrix.node-version }}
          save-cache: true

      - name: Init platform
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          echo 'Node $(node --version)'
          echo 'pnpm $(pnpm --version)'

      - name: Run tests
        run: pnpm jest --maxWorkers=2 --ci --coverage ${{ env.coverage }} --logHeapUsage

      - name: Upload coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always() && env.coverage == 'true'
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: env.coverage == 'true'

  lint:
    needs:
      - setup
    runs-on: ubuntu-latest

    # lint shouldn't need more than 10 min
    timeout-minutes: 15

    steps:
      - name: ⚙️ Setup
        uses: containerbase/internal-tools/setup@44962a8401fc565ef0b0b2cb283177f659befc47 # v3.13.14

      - name: Lint
        run: |
          pnpm eslint -f gha
          pnpm markdown-lint
          pnpm prettier

      # - name: Type check
      #   run: pnpm type-check

  release:
    needs:
      - lint
      - test
    runs-on: ubuntu-latest

    # tests shouldn't need more time
    timeout-minutes: 15

    permissions:
      contents: write
      id-token: write
      issues: write

    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: ⚙️ Setup
        uses: containerbase/internal-tools/setup@44962a8401fc565ef0b0b2cb283177f659befc47 # v3.13.14
        with:
          checkout: false

      - name: semantic-release
        run: |
          pnpm semantic-release --dry-run ${{env.DRY_RUN}} --ci ${{env.DRY_RUN != 'true'}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Catch-all required check
  success:
    needs:
      - setup
      - lint
      - test
      - release
    runs-on: ubuntu-latest

    timeout-minutes: 1

    if: always()
    steps:
      - name: Fail for failed or skipped setup job
        if: |
          needs.setup.result == 'failure' ||
          needs.setup.result == 'skipped'
        run: exit 1

      - name: Fail for failed or skipped lint job
        if: |
          needs.lint.result == 'failure' ||
          needs.lint.result == 'skipped'
        run: exit 1

      - name: Fail for failed or skipped lint job
        if: |
          needs.test.result == 'failure' ||
          needs.test.result == 'skipped'
        run: exit 1

      - name: Fail for failed or skipped release job
        if: |
          needs.release.result == 'failure' ||
          needs.release.result == 'skipped'
        run: exit 1
