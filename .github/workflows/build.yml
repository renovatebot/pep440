name: build

on:
  pull_request:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      dryRun:
        description: "Dry-Run"
        default: "true"
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

env:
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  NODE_VERSION: 14
  DRY_RUN: true

jobs:
  test:
    runs-on: ubuntu-latest

    # tests shouldn't need more time
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0
        with:
          fetch-depth: 2

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Init platform
        shell: bash
        run: |
          echo "Node $(node --version)"
          echo "Yarn $(yarn --version)"

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests
        run: yarn test

      - name: Codecov
        uses: codecov/codecov-action@f32b3a3741e1053eb607407145bc9619351dc93b # renovate: tag=v2.1.0
        if: always()

  release:
    needs: [test]
    runs-on: ubuntu-latest

    # tests shouldn't need more time
    timeout-minutes: 15

    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@9ced9a43a244f3ac94f13bfd896db8c8f30da67a # tag=v3.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email 'renovate@whitesourcesoftware.com'
          git config --global user.name  'Renovate Bot'
          yarn config set version-git-tag false
          npm config set scripts-prepend-node-path true

      - name: Check dry run
        run: |
          if [[ "${{github.event_name}}" == "workflow_dispatch" && "${{ github.event.inputs.dryRun }}" != "true"  ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" == "refs/heads/${{env.DEFAULT_BRANCH}}" ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          elif [[ "${{github.ref}}" =~ ^refs/heads/v[0-9]+(\.[0-9]+)?$ ]]; then
            echo "DRY_RUN=false" >> $GITHUB_ENV
          fi

      - name: Installing dependencies
        run: yarn install --frozen-lockfile

      - name: semantic-release
        run: |
          npx semantic-release --dry-run ${{env.DRY_RUN}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
