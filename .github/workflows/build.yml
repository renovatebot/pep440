name: build

on:
  pull_request:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry-Run'
        default: 'true'
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

env:
  GIT_EMAIL: bot+pep440@renovateapp.com
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
  NODE_VERSION: 20 # needs to be in sync with other versions below
  DRY_RUN: true

permissions:
  contents: read

jobs:
  test:
    name: ${{ matrix.node-version == 20 && format('test ({0})', matrix.os) || format('test ({0}, node-{1})', matrix.os, matrix.node-version) }}
    runs-on: ubuntu-latest

    # tests shouldn't need more time
    timeout-minutes: 30

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18, 20]
        # exclude:
        #   - os: windows-latest
        #     node-version: 12

    env:
      coverage: ${{ matrix.os == 'ubuntu-latest' && matrix.node-version == 20 }}
      NODE_VERSION: ${{ matrix.node-version }}

    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 2
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: Enable corepack
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        shell: bash
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          echo 'Node $(node --version)'
          echo 'pnpm $(pnpm --version)'

      - name: Installing dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm jest --maxWorkers=2 --ci --coverage ${{ env.coverage }} --logHeapUsage

      - name: Upload coverage
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: always() && env.coverage == 'true'
        with:
          name: coverage
          path: coverage

      - name: Codecov
        uses: codecov/codecov-action@5ecb98a3c6b747ed38dc09f787459979aebb39be # v4.3.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: env.coverage == 'true'

  lint:
    runs-on: ubuntu-latest

    # lint shouldn't need more than 10 min
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 2
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: Enable corepack
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          echo 'Node $(node --version)'
          echo 'pnpm $(pnpm --version)'

      - name: Installing dependencies
        run: pnpm install

      - name: Lint
        run: |
          pnpm eslint -f gha
          pnpm markdown-lint
          pnpm prettier

      # - name: Type check
      #   run: pnpm type-check

  release:
    needs: [lint, test]
    runs-on: ubuntu-latest

    # tests shouldn't need more time
    timeout-minutes: 15

    permissions:
      contents: write
      id-token: write

    steps:
      # full checkout for semantic-release
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 0
          show-progress: false
          filter: blob:none # we don't need all blobs

      - name: Enable corepack
        run: corepack enable

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Init platform
        run: |
          git config --global core.autocrlf false
          git config --global core.symlinks true
          git config --global user.email ${GIT_EMAIL}
          git config --global user.name  'Renovate Bot'

      - name: Check dry run
        run: |
          if [[ '${{github.event_name}}' == 'workflow_dispatch' && '${{ github.event.inputs.dryRun }}' != 'true'  ]]; then
            echo 'DRY_RUN=false' >> $GITHUB_ENV
          elif [[ '${{github.ref}}' == 'refs/heads/${{env.DEFAULT_BRANCH}}' ]]; then
            echo 'DRY_RUN=false' >> $GITHUB_ENV
          elif [[ '${{github.ref}}' =~ ^refs/heads/v[0-9]+(\.[0-9]+)?$ ]]; then
            echo 'DRY_RUN=false' >> $GITHUB_ENV
          fi

      - name: Installing dependencies
        run: pnpm install

      - name: semantic-release
        run: |
          pnpm semantic-release --dry-run ${{env.DRY_RUN}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
